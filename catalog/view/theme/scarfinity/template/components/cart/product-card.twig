{% macro ProductCard(props) %}
    {% import 'scarfinity/template/components/currency.twig' as currency %}
	{% import 'scarfinity/template/components/image-container.twig' as imageContainer %}

{% set image %}
    {% for option in props.product.option %} 
        {% if option.name|lower|split('*')[1] == 'colors' %}
            {{ 
                imageContainer.imageContainer({
                    src: option.image,
                    alt: props.product.title ~ ' - ' ~ option.value,
                    name: props.product.name ~ ' - ' ~ option.value
                }) 
            }}
        {% endif %}
    {% endfor %}
{% endset %}

<div class="cart__product-card">
    <div class="cart__product-card__back-remove-block">
    </div>
    <div class="cart__product-card__container">
        <div class="cart__product-card__remove-block">
            <button onclick="cart.remove('{{ props.product.cart_id }}');">D</button>  
        </div>
        <div class="cart__product-card__image-block">
            <div class="cart__product-card__image-block__image">{{ image }}</div>
        </div>
        <div class="cart__product-card__content-block">
            <a
                href="{{props.product.href}}"
                class="cart__product-card__content-block__title">
                    {{props.product.name}}
            </a>
            {% if not props.product.stock %} <span class="text-danger">***</span> {% endif %}
            <div class="cart__product-card__content-block__content">
                {% for option in props.product.option %} 
                    {% if option.name|lower|split('*')[1] == 'colors' %}
                        <div class="title">Цвет:</div>
                        <small>{{ option.value }}</small>
                    {% endif %}
                {% endfor %}
            </div>
        </div>
        <div class="cart__product-card__price-block">
        	{{ 
                currency.currency({ 
                    'price': props.product.price, 
                    'special': data.special, 
                    'subTitle': '' }, 
                    { 'fontSize': 18, 'fontWeight': 400 
                })
            }}

{#             <Currency
                original={this.props.line.product.listPrice}
                size="small"
                unmutable={true} /> #}
        </div>
        <div class="cart__product-card__delim-block">&#215;</div>
        <div class="cart__product-card__quantity-block">
            <input type="text" name="quantity[{{ props.product.cart_id }}]" value="{{ props.product.quantity }}" size="1" class="form-control" />
{#             <Quantity
                quantity={this.props.line.quantity || 0}
                onChange={quantity => this.props.onQuantityChange(this.props.line.product.productId, quantity)}/> #}
        </div>
        <div class="cart__product-card__delim-block">&#61;</div>
        <div class="cart__product-card__total-block">
            {{ currency.currency({ 
                'price': props.product.total, 
                'special': data.special, 
                'subTitle': '' }, 
                { 'fontSize': 18, 'fontWeight': 400 })
            }}
        </div>
    </div>
    <div class="cart__product-card__process-block">
        <span class="cart__product-card__process-block__spinner"></span>
        <div class="cart__product-card__process-block__content">
            Some processed...
        </div>
    </div>
</div>

{% endmacro %}