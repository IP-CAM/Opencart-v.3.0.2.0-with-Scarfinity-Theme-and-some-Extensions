{% macro productCard(props) %}		

	{% import 'scarfinity/template/components/currency.twig' as currency %}
	{% import 'scarfinity/template/components/button.twig' as button %}
	{% import 'scarfinity/template/components/image-container.twig' as _imageContainer %}
    {% import 'scarfinity/template/components/utility/_icons.twig' as _icons  %}
	{% import 'scarfinity/template/components/product-card/product-card-quantity.twig' as productCardQuantity %}
	{% import 'scarfinity/template/components/rating-box.twig' as _ratingBox %}
	{% import 'scarfinity/template/components/utility/color-picker.twig' as _colorPicker %}
	{% import 'scarfinity/template/components/utility/ribbon.twig' as _ribbon %}

	<div class="product-card__container">
		<h1 class="product-card-title">{{ props.headingTitle }}</h1>
		<div class="row product-card-left" data-sticky-container>
			<div class="col-sm-12 col-md-6 is-sticky-container">	
				<div class="product-card-image-container is-sticky" data-margin-top="10" data-sticky-wrap data-sticky-for="768">
					<div id="carousel-product-card-main-image" class="swiper-container">
						<div class="swiper-wrapper">
							{% for image in props.images %}
								<div class="swiper-slide">
									<a href="{{ image.popup }}" title="{{ heading_title }}">
										{{ _imageContainer.imageContainer({ src: image.image }) }}
									</a>
								</div>
							{% endfor %}
						</div>
					</div>
					{# <div id="product-card-main-thumb" class="product-card-image-container__main magnifier-thumb-wrapper">
						<img class="img-responsive" src="{{ props.thumb }}" alt="{{ props.headingTitle }}" name="{{ props.headingTitle }}" />
						{{ _imageContainer.imageContainer({ src: props.image, large: props.popup, magnifer: 'img-magnifer' }) }}
					</div> #}
					<div class="p_card-i_gallery-swiper init" data-slideout-ignore>
						<div class="p_card-i_gallery-swiper__button p_card-i_gallery-swiper__button--prev">
						{{ _icons.ChevronLeft({ size: 12 }) }}
						</div>
						<div class="p_card-i_gallery-swiper__container">
						<div>
							<div class="swiper-container" id="p_card-i_gallery-swiper">
								<div class="swiper-wrapper">
									{% for image in props.images %}
									<div class="swiper-slide p_card-i_gallery-s_slide">
										<label>
										<input type="radio" name="product-card-swiper" value="{{image.image}}" data-large="{{image.popup}}">
										<a  title="{{ heading_title }}">
											{{ _imageContainer.imageContainer({ src: image.thumb }) }}
										</a>
										</label>
									</div>
									{% endfor %}
								</div>
							</div>
						</div>
						</div>
						<div class="p_card-i_gallery-swiper__button p_card-i_gallery-swiper__button--next">
						{{ _icons.ChevronRight({ size: 12 }) }}
						</div>
					</div>
				</div>
				
			</div>
			<div class="col-sm-12 col-md-6" style="position: relative">
				<div class="product-card-preview">
					<div class="product-card-preview__container">
						<div class="magnifier-preview" id="preview"></div>
					</div>
				</div>
				<div class="product-card__product-info-container">
					<div class="product-card__product-title">
						<div class="product-card__product-title__review-block">
							{{ _ratingBox.RatingBox(props.rating) }}
							<span class="product-card__product-title__review-block__review">
								<a 
									href="{{props.reviewsLink}}"
									onclick="$('a[href=\'#{{props.reviewsHref}}\']').trigger('click');">
										<i class="fa fa-caret-down" aria-hidden="true"></i>
										{{props.reviews}}
								</a>
							</span>

							<div class="product-card-favorite">
								<a
									href
									class="product-card-favorite__label"
									onclick="wishlist.add('{{ props.productId }}'); return false;">
										{{props.wishList}}
										<i class="fa fa-heart"></i>
								</a>
							</div>
						</div>
					</div>

					<span class="product-card__product-info-container__delim"></span>

					<div class="product-card__product-info">

						{# Product description #}
						<div class="product-card__product-info__short-description-block">
							<p class="product-card__product-info__short-description-block__content">
								{{ props.shortDescription ~ '...' }}
								<a
									href="{{props.descriptionLink}}"
									onclick="$('a[href=\'#{{props.descriptionHref}}\']').trigger('click');">
										Подробнее
								</a>
							</p>
						</div>

						<div class="row product-card-core process">
							<div class="col-md-12" data-sticky-container>
								<div class="product-card-discounts">
									<hr>
									<div class="product-card-discounts__container">
										<div class="product-card__product-info__pricing-block is-sticky-container">
											<div class="product-price is-sticky" data-sticky data-margin-top="10" data-sticky-for="768">
												<span>Ваша цена: </span>
												{{ currency.currency(
													{ 'price': props.price, 'special': null, unit: '/ шт.' }, 
													{ 'fontSize': 30, 'fontWeight': 600, 'style': 'accent' }) 
												}}
											</div>
										</div>
										<div class="product-card-discounts__container__lines">
											<div>
												<div class="product-card-discounts__line title">
													<span>Эта модель</span>
													<span>Цена за шт</span>
												</div>
												{% for discount in props.discounts %}
													<div class="product-card-discounts__line">
														<span>{{discount.quantity}} шт. и более</span>
														{% if discount.unsale %}
															<span class="product-card-discounts__line--unsale">{{discount.unsale}}</span>
															<span>{{discount.price}}</span>
														{% else %}
															<span>{{discount.price}}</span>
														{% endif %}
													</div>
												{% endfor %}
											</div>
											<div>
												<div class="product-card-discounts__line title">
													<span>Сумма в корзине: </span>
													<span>Цена за шт</span>
												</div>
												<div class="product-card-discounts__line">
													<span>от 5000 руб.</span>
													<span>{{(props.discounts|last).price}}</span>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
							<div class="col-md-12 product-card-colors">
								<h3>Выберите цвета</h3>
								{# <p>Минимальное количество в корзине: <span class="accent">{{props.productMinQuantity}} шт.</span></p> #}
								<p>У вас в корзине: <span class="value" id="cart-quantity">0</span> шт.</p>

								{# Product options segment #}
								{% for option in props.options %}
									{% if option.type == 'radio' and option.name|lower|split('*')[1] == 'colors' %}
										<div class="row product-card-option-row">
											{% for option_value in option.product_option_value %}
												<div class="col-md-3 col-sm-4 col-xs-4 col-sm-no-padding" style="text-align: center;">
													<div class="product-card-quantity ctr-utt">
														<div class="product-card-quantity__title">{{option_value.name}}</div>
														<a href="{{ option_value.image_f }}"><img class="img-responsive img-option" src="{{option_value.image}}" /></a>
														<div class="product-card-quantity__control">
															<button name="dec"><span><i class="fa fa-minus"></i></span></button>
															<input
																type="number"
																name="quantity"
																value="{{ data.minQuantity|default(0) }}"
																data-tmp-value="{{ data.minQuantity|default(0) }}"
																size="2"
																id="input-quantity"
																class="product-card-quantity__value" />
															<button name="inc"><span><i class="fa fa-plus"></i></span></button>
														</div>
														<input type="hidden" name="{{ option.product_option_id }}" value="{{ option_value.product_option_value_id }}" />
													</div>
												</div>
											{% endfor %}
										</div>
									{% endif %}
								{% endfor %}

								<input type="hidden" name="product_id" value="{{ props.product_id }}" />
							</div>
							<div class="product-card-core__process"></div>
						</div>

						<hr>
						{# Tags #}
						{% if props.tags %}
							{% for tag in props.tags %}
								<a href="{{tag.href}}" class="product-tag"><span>{{tag.tag}}</span></a>
							{% endfor %}
						{% endif %}

						{# AddThis region #}


						<div style="display: none" class="addthis_toolbox addthis_default_style" data-url="{{ props.share }}">
							<a class="addthis_button_facebook_like" fb:like:layout="button_count"></a>
							<a class="addthis_button_tweet"></a>
							<a class="addthis_button_pinterest_pinit"></a>
							<a class="addthis_counter addthis_pill_style"></a></div>
						<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-515eeaf54693130e"></script> 
					</div>
				</div>
			</div>
		</div>
	</div>
	{# {{ _ribbon.Ribbon({ type: 'new' }) }} #}

	<script type="text/javascript">
		if(typeof Swiper) {
			var productCardImageContainerSwiper;

			var productCardMainImageSwiper = new Swiper('#carousel-product-card-main-image', {
				mode: 'horizontal',
				slidesPerView: 1,
				pagination: false,
				paginationClickable: false,
				spaceBetween: 0,
				autoplay: false,
				autoplayDisableOnInteraction: true,
				loop: false,
				autoHeight: true,
				onInit: function() {
					$('#p_card-i_gallery-swiper a').eq(0).addClass('pc_active');
				},
				onSlideChangeEnd: function(e) {
					$('#p_card-i_gallery-swiper a').removeClass('pc_active');
					$('#p_card-i_gallery-swiper a').eq(e.activeIndex).addClass('pc_active');
					productCardImageContainerSwiper.slideTo(e.activeIndex);
				}
			});

			var productCardImageContainerSwiper = new Swiper('#p_card-i_gallery-swiper', {
				mode: 'horizontal',
				slidesPerView: 5,
				pagination: false,
				paginationClickable: false,
				spaceBetween: 0,
				slidesOffsetBefore: 0,
				slidesOffsetAfter: 0,
				autoplay: false,
				autoplayDisableOnInteraction: true,
				loop: false,
				autoHeight: false,
				onInit: function() {
					$('.p_card-i_gallery-swiper').removeClass('init');
					productCardMainImageSwiper.slideTo(0, 0);
				},
				onTap: function(e) {
					productCardMainImageSwiper.slideTo(e.clickedIndex, 0);
				},
				ocClick: function(e) {
					productCardMainImageSwiper.slideTo(e.clickedIndex, 0);
				},
				breakpoints: {
					1024: {
						slidesPerView: 5,
					},
					768: {
						slidesPerView: 5,
					},
					640: {
						slidesPerView: 4,
					},
					350: {
						slidesPerView: 4,
					},
					280: {
						slidesPerView: 4,
					}
				}
			});
		}

		$(document).ready(function() {
			$('#carousel-product-card-main-image').magnificPopup({
				type:'image',
				delegate: 'a',
				gallery: {
					enabled: true
				},
				mainClass: 'mfp-with-zoom', // this class is for CSS animation below
				zoom: {
					enabled: false, // By default it's false, so don't forget to enable it
					duration: 300, // duration of the effect, in milliseconds
					easing: 'ease-in-out', // CSS transition easing function
					opener: function(openerElement) {
						// openerElement is the element on which popup was initialized, in this case its <a> tag
						// you don't need to add "opener" option if this code matches your needs, it's defailt one.
						return openerElement.is('img') ? openerElement : openerElement.find('img');
					}
				}
			});

			$('.product-card-quantity').magnificPopup({
				type: 'image',
				delegate: 'a',
				mainClass: 'mfp-with-zoom'
			});
		});

    </script>

{% endmacro %}